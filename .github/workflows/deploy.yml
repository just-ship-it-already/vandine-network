name: Deploy Network Monitor

on:
  push:
    branches:
      - dev
      - staging
      - main
  pull_request:
    branches:
      - main
      - staging

jobs:
  # Linting and Testing
  test:
    name: Test & Validate
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Validate HTML structure
        run: |
          echo "Validating HTML files..."
          if [ -f vandine-showcase.html ]; then
            # Basic HTML validation
            grep -q "<!DOCTYPE html>" vandine-showcase.html && echo "✅ HTML doctype found"
            grep -q "<html" vandine-showcase.html && echo "✅ HTML tag found"
            grep -q "</html>" vandine-showcase.html && echo "✅ HTML properly closed"
          else
            echo "❌ Main HTML file not found"
            exit 1
          fi
      
      - name: Check for sensitive data
        run: |
          echo "Checking for exposed credentials..."
          # Check for common secret patterns (excluding .env files)
          if grep -r "password=\|secret=\|api_key=\|token=" --include="*.html" --include="*.js" --exclude-dir=".git" . 2>/dev/null | grep -v "example\|placeholder\|your" ; then
            echo "⚠️ Potential secrets found in code"
            exit 1
          else
            echo "✅ No exposed secrets found"
          fi
      
      - name: Check file sizes
        run: |
          echo "Checking file sizes..."
          find . -name "*.html" -size +1M -exec echo "⚠️ Large HTML file: {}" \;
          echo "✅ File size check complete"
      
      - name: Verify required files
        run: |
          echo "Checking required files..."
          [ -f README.md ] && echo "✅ README.md exists" || exit 1
          [ -f .gitignore ] && echo "✅ .gitignore exists" || exit 1
          [ -f vandine-showcase.html ] && echo "✅ Main HTML exists" || exit 1
          echo "✅ All required files present"

  # Development Deployment
  deploy-dev:
    name: Deploy to Development
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup environment
        run: |
          echo "Setting up development environment"
          if [ -f .env.development ]; then
            cp .env.development .env
            echo "✅ Development environment configured"
          fi
      
      - name: Build for development
        run: |
          echo "Building for development..."
          echo "Build timestamp: Sat Sep  6 11:20:16 PDT 2025" > build.txt
          echo "Environment: development" >> build.txt
          echo "Branch: ${{ github.ref_name }}" >> build.txt
          echo "✅ Build complete"
      
      - name: Deploy notification
        run: |
          echo "📦 Development deployment complete"
          echo "URL: https://dev.rafael.vandine.us (configure your server)"

  # Staging Deployment  
  deploy-staging:
    name: Deploy to Staging
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup environment
        run: |
          echo "Setting up staging environment"
          if [ -f .env.staging ]; then
            cp .env.staging .env
            echo "✅ Staging environment configured"
          fi
      
      - name: Run smoke tests
        run: |
          echo "Running smoke tests..."
          # Check if main files exist and are valid
          [ -f vandine-showcase.html ] && echo "✅ Main page exists"
          # Check HTML is valid
          grep -q "<!DOCTYPE html>" vandine-showcase.html && echo "✅ Valid HTML"
          echo "✅ Smoke tests passed"
      
      - name: Deploy notification
        run: |
          echo "🚀 Staging deployment complete"
          echo "URL: https://staging.rafael.vandine.us (configure your server)"

  # Production Deployment
  deploy-production:
    name: Deploy to Production
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup environment
        run: |
          echo "Setting up production environment"
          if [ -f .env.production ]; then
            cp .env.production .env
            echo "✅ Production environment configured"
          fi
      
      - name: Production checks
        run: |
          echo "Running production safety checks..."
          # Verify no debug code
          if grep -r "console.log\|debugger" --include="*.html" --include="*.js" . 2>/dev/null | grep -v "//" ; then
            echo "⚠️ Debug code found - review before production"
          fi
          echo "✅ Production checks complete"
      
      - name: Create release info
        run: |
          echo "Creating release information..."
          echo "Release: ${{ github.sha }}" > release.txt
          echo "Date: Sat Sep  6 11:20:16 PDT 2025" >> release.txt
          echo "✅ Release info created"
      
      - name: Deploy notification
        run: |
          echo "✨ Production deployment complete"
          echo "URL: https://rafael.vandine.us"
