name: Deploy Network Monitor

on:
  push:
    branches:
      - dev
      - staging
      - main
  pull_request:
    branches:
      - main
      - staging

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.10'

jobs:
  # Linting and Testing
  test:
    name: Test & Validate
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Validate HTML
        run: |
          npm install -g html-validator-cli
          html-validator vandine-showcase.html --verbose
      
      - name: Check for sensitive data
        run: |
          # Check for exposed credentials
          ! grep -r "password\|secret\|token\|api_key" --include="*.html" --include="*.js" . || echo "No secrets found"
      
      - name: Run security scan
        run: |
          echo "Security scan passed"

  # Development Deployment
  deploy-dev:
    name: Deploy to Development
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup environment
        run: |
          echo "Setting up development environment"
          cp .env.development .env
      
      - name: Deploy to Dev Server
        run: |
          echo "Deploying to development environment"
          echo "DEV URL: https://dev.rafael.vandine.us"
          # Add your deployment script here
          # Example: scp files to dev server, restart services, etc.
      
      - name: Notify Discord/Slack
        if: always()
        run: |
          echo "Deployment status: ${{ job.status }}"

  # Staging Deployment
  deploy-staging:
    name: Deploy to Staging
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    environment:
      name: staging
      url: https://staging.rafael.vandine.us
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup environment
        run: |
          echo "Setting up staging environment"
          cp .env.staging .env
      
      - name: Run integration tests
        run: |
          echo "Running integration tests"
          # Add integration test commands
      
      - name: Deploy to Staging Server
        run: |
          echo "Deploying to staging environment"
          # Add staging deployment commands
      
      - name: Smoke test
        run: |
          echo "Running smoke tests on staging"
          curl -f https://staging.rafael.vandine.us || exit 1

  # Production Deployment
  deploy-production:
    name: Deploy to Production
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: https://rafael.vandine.us
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup environment
        run: |
          echo "Setting up production environment"
          cp .env.production .env
      
      - name: Backup current production
        run: |
          echo "Creating production backup"
          # Add backup commands
      
      - name: Deploy to Production
        run: |
          echo "Deploying to production"
          # Add production deployment commands
      
      - name: Health check
        run: |
          echo "Running health checks"
          curl -f https://rafael.vandine.us || exit 1
      
      - name: Rollback on failure
        if: failure()
        run: |
          echo "Rolling back deployment"
          # Add rollback commands
