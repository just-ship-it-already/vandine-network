version: '3.8'

x-common-variables: &common-variables
  POSTGRES_DB: ${POSTGRES_DB}
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  REDIS_PASSWORD: ${REDIS_PASSWORD}

services:
  postgres:
    image: postgres:15-alpine
    container_name: vandine_postgres
    environment:
      <<: *common-variables
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: vandine_redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  django:
    build:
      context: .
      dockerfile: docker/django/Dockerfile
    container_name: vandine_django
    environment:
      <<: *common-variables
    volumes:
      - ./src/django_app:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: gunicorn vandine_monitor.wsgi:application --bind 0.0.0.0:8000

  fastapi:
    build:
      context: .
      dockerfile: docker/fastapi/Dockerfile
    container_name: vandine_fastapi
    environment:
      <<: *common-variables
    volumes:
      - ./src/fastapi_app:/app
    ports:
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8001 --reload

  celery:
    build:
      context: .
      dockerfile: docker/django/Dockerfile
    container_name: vandine_celery
    environment:
      <<: *common-variables
    volumes:
      - ./src/django_app:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A vandine_monitor worker -l info

  celery-beat:
    build:
      context: .
      dockerfile: docker/django/Dockerfile
    container_name: vandine_celery_beat
    environment:
      <<: *common-variables
    volumes:
      - ./src/django_app:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A vandine_monitor beat -l info

  nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    container_name: vandine_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_volume:/static
      - media_volume:/media
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - django
      - fastapi

volumes:
  postgres_data:
  static_volume:
  media_volume: